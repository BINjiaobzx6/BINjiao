--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.5) ~  Much Love, Ferib 

]]--

local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26=0;local v27;while true do if (v26==(3 -2)) then return v5(v27);end if (v26==(1661 -(1477 + 184))) then v27={};for v43=1 -0 , #v24 do v6(v27,v0(v4(v1(v2(v24,v43,v43 + 1 + 0 )),v1(v2(v25,1 + (v43% #v25) ,(857 -(564 + 292)) + (v43% #v25) + (1 -0) )))%256 ));end v26=1;end end end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v28,v29,...) local v30=0 -0 ;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;local v40;local v41;local v42;while true do if (v30==1) then function v33(v44,v45,v46) if v46 then local v87=304 -(244 + 60) ;local v88;while true do if (v87==(0 + 0)) then local v116=0;while true do if (v116==0) then v88=(v44/(2^(v45-(477 -(41 + 435)))))%((1003 -(938 + 63))^(((v46-(1 + 0)) -(v45-(1126 -(936 + 189)))) + 1)) ;return v88-(v88%(1 + 0)) ;end end end end else local v89=1613 -(1565 + 48) ;local v90;while true do if (v89==(0 + 0)) then v90=(1140 -(782 + 356))^(v45-(268 -(176 + 91))) ;return (((v44%(v90 + v90))>=v90) and (2 -1)) or (0 -0) ;end end end end v34=nil;function v34() local v47=0;local v48;local v49;while true do if (v47==(1092 -(975 + 117))) then v48=1875 -(157 + 1718) ;v49=nil;v47=1;end if (v47==(1 + 0)) then while true do local v98=0 -0 ;while true do if (v98==(0 -0)) then if (v48==(1019 -(697 + 321))) then return v49;end if (v48==0) then v49=v9(v28,v31,v31);v31=v31 + (2 -1) ;v48=1 -0 ;end break;end end end break;end end end v35=nil;v30=2;end if (v30==(8 -4)) then v40=nil;function v40(...) return {...},v20("#",...);end v41=nil;function v41() local v50=0;local v51;local v52;local v53;local v54;local v55;local v56;local v57;while true do if (v50==(1 -0)) then v53=nil;v54=nil;v50=5 -3 ;end if (v50==2) then v55=nil;v56=nil;v50=1230 -(322 + 905) ;end if (v50==(614 -(602 + 9))) then v57=nil;while true do if (v51==(1189 -(449 + 740))) then local v120=872 -(826 + 46) ;while true do if (v120==1) then v54={};v55={v52,v53,nil,v54};v120=1 + 1 ;end if (v120==0) then v52={};v53={};v120=1899 -(260 + 1638) ;end if (v120==2) then v51=1;break;end end end if (v51==2) then local v121=440 -(382 + 58) ;while true do if (v121==(0 -0)) then for v135=1 + 0 ,v36() do local v136=0 -0 ;local v137;local v138;while true do if (v136==0) then v137=0 -0 ;v138=nil;v136=1206 -(902 + 303) ;end if ((1 -0)==v136) then while true do if (v137==0) then v138=v34();if (v33(v138,2 -1 ,569 -(32 + 335 + (1891 -(1121 + 569))) )==0) then local v151=v33(v138,216 -(22 + 192) ,686 -(483 + 200) );local v152=v33(v138,931 -((1677 -(1404 + 59)) + (1951 -1238)) ,7 -1 );local v153={v35(),v35(),nil,nil};if (v151==0) then local v155=0 -0 ;local v156;while true do if (v155==(0 -0)) then v156=0 -0 ;while true do if (v156==(0 + 0)) then v153[239 -(141 + 95) ]=v35();v153[(866 + 15) -((725 -443) + (1430 -835)) ]=v35();break;end end break;end end elseif (v151==((1 + 2) -(5 -3))) then v153[(1153 + 487) -(1523 + 60 + 54) ]=v36();elseif (v151==2) then v153[4 -1 ]=v36() -((2 + 0)^16) ;elseif (v151==(166 -(92 + 71))) then local v385=0;while true do if (v385==(0 + 0)) then v153[4 -1 ]=v36() -(2^(781 -(574 + 191))) ;v153[4]=v35();break;end end end if (v33(v152,1,1)==(1 + 0)) then v153[4 -2 ]=v57[v153[2 + 0 ]];end if (v33(v152,851 -(254 + 595) ,128 -(55 + 71) )==(1 -0)) then v153[1793 -(573 + 1217) ]=v57[v153[1750 -((2104 -1344) + 76 + 911) ]];end if (v33(v152,(4 -1) + (939 -(714 + 225)) ,8 -5 )==(1 -0)) then v153[1917 -(194 + 1595 + 124) ]=v57[v153[4]];end v52[v135]=v153;end break;end end break;end end end for v139=(1 -0) -(806 -(118 + 688)) ,v36() do v53[v139-((1114 -(25 + 23)) -(68 + 194 + 803)) ]=v41();end v121=1887 -(927 + 959) ;end if (v121==1) then return v55;end end end if (v51==(3 -2)) then v56=v36();v57={};for v128=1,v56 do local v129=732 -(16 + 716) ;local v130;local v131;local v132;while true do if (v129==(1 -0)) then v132=nil;while true do if (v130==(97 -(11 + 86))) then v131=v34();v132=nil;v130=1;end if (v130==(2 -1)) then if (v131==(286 -(175 + 110))) then v132=v34()~=(0 -0) ;elseif (v131==(933 -(857 + (364 -290)))) then v132=v37();elseif (v131==(1799 -(503 + 1293))) then v132=v38();end v57[v128]=v132;break;end end break;end if (v129==0) then v130=0 -0 ;v131=nil;v129=1;end end end v55[3]=v34();v51=2;end end break;end if (v50==(0 + 0)) then v51=0;v52=nil;v50=1062 -(810 + 251) ;end end end v30=5;end if (v30==0) then v31=(2 + 0) -1 ;v32=nil;v28=v12(v11(v28,2 + 3 ),v7("\63\119","\27\17\89\80"),function(v58) if (v9(v58,5 -3 )==(72 + 7)) then local v91=533 -(43 + 490) ;while true do if (v91==0) then local v117=0;while true do if (v117==(733 -(711 + 22))) then v32=v8(v11(v58,1,1 + (0 -0) ));return "";end end end end else local v92=859 -(240 + 619) ;local v93;local v94;while true do if (v92==(1 + 0)) then while true do if (v93==(0 -0)) then v94=v10(v8(v58,2 + 14 ));if v32 then local v141=v13(v94,v32);v32=nil;return v141;else return v94;end break;end end break;end if (0==v92) then v93=1744 -(1344 + 400) ;v94=nil;v92=406 -(255 + 150) ;end end end end);v33=nil;v30=1;end if (v30==(4 + 1)) then v42=nil;function v42(v59,v60,v61) local v62=0;local v63;local v64;local v65;while true do if (v62==1) then v65=v59[2 + 1 ];return function(...) local v99=0 -0 ;local v100;local v101;local v102;local v103;local v104;local v105;local v106;local v107;local v108;local v109;local v110;local v111;local v112;local v113;while true do if (v99==(3 -2)) then v104=(3010 -(404 + 1335)) -(226 + 1044) ;v105= -(407 -(183 + 223));v106={};v107={...};v99=2;end if (v99==0) then v100=v63;v101=v64;v102=v65;v103=v40;v99=1;end if (v99==(2 -0)) then v108=v20("#",...) -(1 + 0) ;v109={};v110={};for v133=(43 + 74) -((369 -(10 + 327)) + 60 + 25) ,v108 do if (v133>=v102) then v106[v133-v102 ]=v107[v133 + (339 -(118 + 220)) ];else v110[v133]=v107[v133 + 1 + 0 + 0 ];end end v99=452 -(108 + 341) ;end if (v99==(2 + 1)) then v111=(v108-v102) + (2 -1) ;v112=nil;v113=nil;while true do local v134=0 -0 ;while true do if (v134==(1494 -(711 + 782))) then if (v113<=((20 -9) + (506 -(270 + 199)))) then if (v113<=23) then if (v113<=11) then if (v113<=(2 + 3)) then if (v113<=2) then if (v113<=(1819 -(580 + 1239))) then v110[v112[7 -(14 -9) ]]=v110[v112[3]] * v110[v112[4 + 0 ]] ;elseif (v113>((35 + 923) -(389 + 503 + 65))) then if (v110[v112[(9 -5) -(2 + 0) ]]==v112[4]) then v104=v104 + (1168 -(645 + 522)) ;else v104=v112[1793 -(1010 + 780) ];end else local v217=0;local v218;local v219;local v220;local v221;while true do if (1==v217) then local v420=0 + 0 ;while true do if ((0 -0)==v420) then v105=(v220 + v218) -(1 -(0 -0)) ;v221=1836 -(1045 + 791) ;v420=1;end if (1==v420) then v217=4 -2 ;break;end end end if (v217==0) then v218=v112[2 -0 ];v219,v220=v103(v110[v218](v21(v110,v218 + 1 ,v105)));v217=506 -(351 + 154) ;end if (v217==(1576 -(1281 + 293))) then for v458=v218,v105 do local v459=266 -(28 + 238) ;while true do if (v459==(0 -0)) then v221=v221 + 1 ;v110[v458]=v219[v221];break;end end end break;end end end elseif (v113<=(1562 -(1381 + 178))) then local v165=0 + 0 ;local v166;local v167;while true do if (v165==0) then v166=v112[1 + 0 + 1 + 0 ];v167=v110[v112[3]];v165=3 -2 ;end if (v165==(1 + 0)) then v110[v166 + (471 -(381 + 89)) ]=v167;v110[v166]=v167[v112[(7 + 0) -(3 + 0) ]];break;end end elseif (v113==(6 -2)) then local v222=1156 -(1074 + 82) ;local v223;local v224;local v225;while true do if (v222==(0 -0)) then local v422=1784 -(214 + 1570) ;while true do if (v422==1) then v222=1;break;end if ((1455 -(990 + 465))==v422) then v223=v112[1 + 1 + 0 + 0 ];v224={v110[v223](v110[v223 + 1 + 0 ])};v422=3 -2 ;end end end if (v222==(1727 -(1668 + 58))) then v225=0;for v460=v223,v112[(980 -(512 + 114)) -((226 -139) + 263) ] do local v461=0;while true do if (v461==(0 -0)) then v225=v225 + ((629 -448) -(32 + 35 + 113)) ;v110[v460]=v224[v225];break;end end end break;end end else local v226=0;local v227;while true do if (0==v226) then v227=v112[1 + 1 ];v110[v227]=v110[v227]();break;end end end elseif (v113<=(7 + 1)) then if (v113<=((3578 -2517) -(87 + 968))) then local v168=1994 -(109 + 1885) ;local v169;while true do if (v168==(1469 -(1269 + 200))) then v169=v112[2];do return v21(v110,v169,v105);end break;end end elseif (v113>(13 -6)) then local v228=815 -(98 + 717) ;local v229;local v230;while true do if (v228==(827 -(802 + 24))) then while true do if (v229==(0 -0)) then v230=v112[2 -0 ];v110[v230]=v110[v230](v21(v110,v230 + 1 + 0 ,v112[3 + 0 + 0 ]));break;end end break;end if (v228==(0 + 0)) then v229=0 + 0 ;v230=nil;v228=2 -1 ;end end else local v231=0 -0 ;local v232;local v233;while true do if (v231==(0 + 0)) then v232=v112[4 -2 ];v233=v110[v232];v231=1 + 0 ;end if (v231==(1 + 0)) then for v462=v232 + 1 + 0 ,v105 do v15(v233,v110[v462]);end break;end end end elseif (v113<=(5 + 4)) then local v170=v110[v112[1437 -(797 + 636) ]];if  not v170 then v104=v104 + 1 ;else local v234=0 -0 ;local v235;while true do if (v234==0) then v235=1619 -(1427 + 192) ;while true do if (0==v235) then v110[v112[1 + 1 ]]=v170;v104=v112[3];break;end end break;end end end elseif (v113==10) then local v236=0;local v237;local v238;local v239;local v240;while true do if (0==v236) then v237=v112[2];v238,v239=v103(v110[v237](v21(v110,v237 + 1 ,v105)));v236=1;end if ((4 -2)==v236) then for v463=v237,v105 do local v464=0;local v465;while true do if (v464==(0 + 0)) then v465=0 + 0 ;while true do if (v465==0) then v240=v240 + 1 ;v110[v463]=v238[v240];break;end end break;end end end break;end if (v236==1) then v105=(v239 + v237) -1 ;v240=326 -(192 + 134) ;v236=1278 -(316 + 960) ;end end else local v241=0 + 0 ;local v242;while true do if (v241==0) then v242=v112[2];do return v110[v242](v21(v110,v242 + 1 ,v112[3 + 0 ]));end break;end end end elseif (v113<=17) then if (v113<=14) then if (v113<=12) then v110[v112[2 + 0 + (0 -0) ]]=v112[554 -(83 + 468) ]~=(1806 -(1202 + 604)) ;elseif (v113==(60 -47)) then v110[v112[2]]=v61[v112[4 -1 ]];else v110[v112[5 -3 ]]=v112[11 -(333 -(45 + 280)) ]~=(0 + 0) ;end elseif (v113<=(14 + 1)) then if (v110[v112[1 + 1 ]]==v112[4]) then v104=v104 + 1 + 0 ;else v104=v112[(3 + 10) -(18 -8) ];end elseif (v113>(1927 -(340 + 1571))) then local v247=v112[1 + 1 ];local v248,v249=v103(v110[v247](v21(v110,v247 + 1 + (1772 -(1733 + 39)) ,v112[8 -5 ])));v105=(v249 + v247) -(1035 -(125 + 909)) ;local v250=0;for v392=v247,v105 do local v393=1948 -(1096 + 852) ;while true do if (v393==(0 + 0)) then v250=v250 + (1 -0) ;v110[v392]=v248[v250];break;end end end elseif (v112[2 + 0 ]==v110[v112[516 -(409 + 103) ]]) then v104=v104 + (237 -(46 + 190)) ;else v104=v112[3];end elseif (v113<=(115 -(51 + 44))) then if (v113<=18) then do return;end elseif (v113==(42 -(7 + 16))) then v110[v112[2]]=v110[v112[(2733 -(1114 + 203)) -(447 + (1692 -(228 + 498))) ]];else do return v110[v112[1 + 1 ]]();end end elseif (v113<=(12 + 9)) then local v172=663 -(174 + 489) ;local v173;while true do if (v172==(0 -0)) then v173=v112[954 -((2707 -(830 + 1075)) + (674 -(303 + 221))) ];do return v110[v173](v21(v110,v173 + 1 ,v112[1272 -(231 + 1038) ]));end break;end end elseif (v113>((50 + 10) -(1200 -(171 + 991)))) then local v253=v112[(7496 -5677) -((4572 -2869) + (284 -170)) ];local v254=v110[v253 + 2 + 0 ];local v255=v110[v253] + v254 ;v110[v253]=v255;if (v254>(0 -0)) then if (v255<=v110[v253 + (2 -1) ]) then local v468=0 -0 ;while true do if (v468==(0 -0)) then v104=v112[3];v110[v253 + 3 ]=v255;break;end end end elseif (v255>=v110[v253 + (1249 -(111 + 1137)) ]) then local v469=0;while true do if (v469==(158 -(91 + 67))) then v104=v112[8 -5 ];v110[v253 + 3 ]=v255;break;end end end else local v257=0;local v258;local v259;while true do if (v257==(0 + 0)) then v258=523 -(423 + 100) ;v259=nil;v257=1 + 0 ;end if (v257==(2 -1)) then while true do if (v258==(0 + 0)) then v259=v112[773 -(326 + 445) ];v110[v259](v110[v259 + ((8 -6) -(2 -1)) ]);break;end end break;end end end elseif (v113<=(81 -46)) then if (v113<=((1441 -(530 + 181)) -(376 + (1206 -(614 + 267))))) then if (v113<=((78 -(19 + 13)) -(32 -12))) then if (v113<=(18 + (13 -7))) then v110[v112[5 -3 ]]=v110[v112[3]]%v110[v112[(4 + 8) -8 ]] ;elseif (v113==((13 -5) + (34 -17))) then local v260=v112[999 -((2727 -(1293 + 519)) + 82) ];v110[v260](v110[v260 + (1 -0) ]);else local v261=0 -0 ;local v262;local v263;local v264;local v265;local v266;while true do if (v261==2) then v266=nil;while true do if (v262==(1 -0)) then local v525=0 -0 ;while true do if (v525==(2 -1)) then v262=2 + 0 ;break;end if (v525==(0 + 0)) then v105=(v265 + v263) -((34 -19) -(3 + 6 + 5)) ;v266=0 + 0 ;v525=1 + 0 ;end end end if (v262==0) then local v526=1096 -(709 + 387) ;while true do if (v526==0) then v263=v112[2];v264,v265=v103(v110[v263]());v526=1859 -(673 + 1185) ;end if (v526==(2 -1)) then v262=1;break;end end end if (v262==(6 -4)) then for v565=v263,v105 do local v566=0 -0 ;while true do if (v566==(0 + 0)) then v266=v266 + 1 + 0 ;v110[v565]=v264[v266];break;end end end break;end end break;end if (v261==(0 -0)) then v262=0;v263=nil;v261=1;end if (v261==1) then v264=nil;v265=nil;v261=1 + 1 ;end end end elseif (v113<=(53 -26)) then v110[v112[3 -1 ]]=v61[v112[1883 -(446 + 1434) ]];elseif (v113==((1687 -(1040 + 243)) -((253 -168) + 291))) then if v110[v112[2]] then v104=v104 + ((1849 -(559 + 1288)) -1) ;else v104=v112[1934 -(609 + 1322) ];end else v110[v112[2 + (454 -(13 + 441)) ]]=v110[v112[(4738 -3470) -((636 -393) + (5090 -4068)) ]][v110[v112[(1 + 3) -(0 -0) ]]];end elseif (v113<=32) then if (v113<=(1217 -(380 + 689 + 52 + 66))) then v110[v112[2]]=v112[6 -(8 -5) ] + v110[v112[3 + 1 ]] ;elseif (v113==(56 -25)) then local v269=0 + 0 ;local v270;while true do if (v269==(0 + 0)) then v270=v112[2 + 0 + 0 + 0 ];v110[v270](v21(v110,v270 + 1 ,v112[3 + 0 ]));break;end end else local v271=0;local v272;local v273;local v274;local v275;local v276;while true do if (v271==(434 -(153 + 280))) then v274=nil;v275=nil;v271=5 -3 ;end if (v271==(0 + 0)) then v272=0 + 0 ;v273=nil;v271=1 + 0 ;end if (v271==2) then v276=nil;while true do if (v272==(0 + 0)) then local v527=0 + 0 ;while true do if (v527==(1 -0)) then v272=1;break;end if ((0 + 0)==v527) then v273=v112[(670 -(89 + 578)) -(1 + 0) ];v274,v275=v103(v110[v273]());v527=1 -0 ;end end end if ((1051 -(572 + 477))==v272) then for v567=v273,v105 do local v568=0 + 0 ;while true do if (v568==(0 + 0)) then v276=v276 + 1 + 0 ;v110[v567]=v274[v276];break;end end end break;end if (v272==(87 -(84 + 2))) then local v528=0 -0 ;while true do if (v528==(1 + 0)) then v272=844 -(497 + 345) ;break;end if (v528==0) then v105=(v275 + v273) -(1 + 0) ;v276=0 + 0 + (1333 -(605 + 728)) ;v528=1 + 0 ;end end end end break;end end end elseif (v113<=33) then local v178=0;local v179;local v180;local v181;local v182;local v183;while true do if (v178==(0 -0)) then v179=v112[1 + 1 ];v180=v112[14 -10 ];v178=1 + 0 ;end if (v178==3) then if v183 then local v430=0 -0 ;while true do if ((0 + 0)==v430) then v110[v181]=v183;v104=v112[492 -(457 + 32) ];break;end end else v104=v104 + 1 + 0 ;end break;end if (v178==2) then for v414=1403 -(832 + 570) ,v180 do v110[v181 + v414 ]=v182[v414];end v183=v182[1];v178=3 + 0 ;end if (v178==(1 + 0)) then v181=v179 + ((10 -7) -(1 + 0)) ;v182={v110[v179](v110[v179 + 1 ],v110[v181])};v178=5 -3 ;end end elseif (v113==((3014 -(884 + 916)) -((2350 -1227) + 34 + 23))) then local v277=0;local v278;local v279;local v280;while true do if (v277==(654 -(232 + 421))) then v280=nil;while true do if (v278==(1889 -(1569 + 320))) then v279=v112[(195 + 598) -(368 + 81 + 342) ];v280=v110[v112[(9 -6) + 0 ]];v278=606 -(316 + 289) ;end if ((2 -1)==v278) then v110[v279 + 1 + 0 ]=v280;v110[v279]=v280[v112[1457 -(666 + 787) ]];break;end end break;end if (v277==(425 -(360 + 65))) then v278=0 + 0 ;v279=nil;v277=255 -(79 + 175) ;end end else v110[v112[2 -0 ]]();end elseif (v113<=(32 + 9)) then if (v113<=(116 -78)) then if (v113<=(69 -33)) then v110[v112[(905 -(503 + 396)) -(185 -(92 + 89)) ]]={};elseif (v113==((564 -273) -(84 + 79 + 54 + 37))) then if v110[v112[7 -5 ]] then v104=v104 + 1 + 0 ;else v104=v112[1933 -((4261 -2392) + 54 + 7) ];end else v110[v112[1 + 1 ]]= #v110[v112[8 -5 ]];end elseif (v113<=(5 + 34)) then v110[v112[2 -0 ]]= #v110[v112[1247 -(485 + 759) ]];elseif (v113==(92 -52)) then v110[v112[1 + 1 ]]=v112[1192 -(442 + 747) ] + v110[v112[4]] ;else v110[v112[1137 -(832 + 303) ]]=v110[v112[949 -(88 + 858) ]] + v112[4] ;end elseif (v113<=(14 + 30)) then if (v113<=(35 + 7)) then local v186=0;local v187;while true do if (v186==(0 + 0)) then v187=v112[791 -(766 + 23) ];v110[v187](v21(v110,v187 + (4 -3) ,v112[3]));break;end end elseif (v113==(57 -14)) then local v284=0 -0 ;local v285;local v286;local v287;while true do if (v284==1) then v287={};v286=v18({},{[v7("\241\74\115\68\202\112\98","\42\174\21\26")]=function(v470,v471) local v472=v287[v471];return v472[3 -2 ][v472[6 -4 ]];end,[v7("\47\8\175\75\7\62\175\74\21\47","\46\112\87\193")]=function(v473,v474,v475) local v476=1073 -(1036 + 37) ;local v477;while true do if (v476==(0 + 0)) then v477=v287[v474];v477[1 -0 ][v477[2 -(0 + 0) ]]=v475;break;end end end});v284=2;end if (v284==(1482 -(641 + 839))) then for v478=914 -(910 + 3) ,v112[9 -5 ] do local v479=1684 -(1466 + 218) ;local v480;local v481;while true do if (v479==(1 + 0)) then while true do if (v480==0) then local v599=1148 -(556 + 592) ;while true do if (v599==(1 + 0)) then v480=1;break;end if (v599==0) then v104=v104 + 1 ;v481=v100[v104];v599=809 -(329 + 479) ;end end end if (v480==(855 -(174 + 680))) then if (v481[3 -2 ]==(38 -19)) then v287[v478-(1 + 0) ]={v110,v481[3]};else v287[v478-(19 -(1 + 9 + (1485 -(29 + 1448)))) ]={v60,v481[11 -8 ]};end v109[ #v109 + (4 -3) ]=v287;break;end end break;end if (v479==0) then v480=0 + 0 ;v481=nil;v479=1528 -(389 + 1138) ;end end end v110[v112[576 -(102 + 472) ]]=v42(v285,v286,v61);break;end if (v284==0) then v285=v101[v112[3 + 0 ]];v286=nil;v284=1 + 0 ;end end else v110[v112[2]]=v110[v112[3 + 0 ]]%v112[1549 -(320 + 1225) ] ;end elseif (v113<=(44 + 2)) then if (v113==45) then local v289=v112[(2627 -1151) -(814 + 515 + (1609 -(157 + 1307))) ];local v290=v110[v289];for v399=v289 + ((1862 -(821 + 1038)) -2) ,v112[7 -4 ] do v15(v290,v110[v399]);end else local v291=0 + 0 ;local v292;local v293;while true do if (v291==(1 -0)) then for v482=v292 + 1 + 0 ,v105 do v15(v293,v110[v482]);end break;end if (v291==0) then local v433=0 -0 ;while true do if (v433==(1026 -(834 + 192))) then v292=v112[2];v293=v110[v292];v433=1 + 0 ;end if (1==v433) then v291=1;break;end end end end end elseif (v113==(13 + 34)) then for v400=v112[1 + 1 ],v112[(689 -244) -(416 + (330 -(300 + 4))) ] do v110[v400]=nil;end else v110[v112[1 + 1 ]]=v110[v112[7 -4 ]];end elseif (v113<=(434 -(112 + 250))) then if (v113<=(24 + 36)) then if (v113<=(1025 -((350 -210) + 477 + 354))) then if (v113<=51) then if (v113<=(1899 -(729 + 680 + 330 + 111))) then v110[v112[1 + 1 ]]=v60[v112[3 + 0 ]];elseif (v113==50) then local v296=0;local v297;local v298;while true do if (v296==(1415 -(1001 + 413))) then while true do if ((0 -0)==v297) then v298=v112[2];v110[v298](v21(v110,v298 + 1 ,v105));break;end end break;end if (v296==0) then v297=882 -(244 + 638) ;v298=nil;v296=694 -(627 + 66) ;end end else local v299=0;local v300;local v301;while true do if (v299==(2 -1)) then for v483=v300 + 1 ,v112[605 -(512 + 90) ] do v15(v301,v110[v483]);end break;end if (v299==(1906 -(1665 + 241))) then v300=v112[(1437 -(373 + 344)) -(7 + 8 + 187 + 516) ];v301=v110[v300];v299=2 -1 ;end end end elseif (v113<=(87 -35)) then v110[v112[1101 -(35 + 1064) ]][v112[3 + 0 ]]=v110[v112[(25 -13) -8 ]];elseif (v113>(1 + 52)) then v110[v112[1 + (1237 -(298 + 938)) ]]=v60[v112[1262 -(233 + 1026) ]];else local v304=1666 -(636 + 1030) ;local v305;local v306;local v307;local v308;while true do if (v304==(2 + 0)) then for v484=v305,v105 do v308=v308 + 1 + 0 + 0 + 0 ;v110[v484]=v306[v308];end break;end if (v304==(0 + 0)) then v305=v112[2];v306,v307=v103(v110[v305](v110[v305 + (222 -(55 + 166)) ]));v304=1;end if (1==v304) then v105=(v307 + v305) -1 ;v308=0 + 0 ;v304=2;end end end elseif (v113<=((11 + 89) -43)) then if (v113<=(209 -154)) then v110[v112[299 -(36 + 261) ]]();elseif (v113==56) then local v309=0 -0 ;local v310;local v311;local v312;local v313;while true do if (v309==1) then v312=nil;v313=nil;v309=1370 -(34 + 1334) ;end if (v309==0) then v310=0 + 0 ;v311=nil;v309=1;end if (v309==2) then while true do if (v310==(0 + 0)) then local v539=1283 -(1035 + 248) ;while true do if (1==v539) then v310=22 -(20 + 1) ;break;end if (v539==0) then v311=v112[2];v312=v110[v311];v539=1 + 0 ;end end end if (v310==1) then v313=v112[322 -(134 + 185) ];for v571=1134 -(549 + 584) ,v313 do v312[v571]=v110[v311 + v571 ];end break;end end break;end end else local v314=685 -(314 + 371) ;local v315;local v316;local v317;local v318;local v319;while true do if (v314==0) then v315=v112[6 -4 ];v316=v112[972 -(478 + 490) ];v314=1 + 0 ;end if (v314==(1175 -(786 + 386))) then if v319 then local v512=0;while true do if (v512==(0 -0)) then v110[v317]=v319;v104=v112[1382 -(1055 + 324) ];break;end end else v104=v104 + (1487 -((2338 -(1093 + 247)) + 434 + 54)) ;end break;end if (v314==1) then v317=v315 + (440 -(145 + 31 + 262)) ;v318={v110[v315](v110[v315 + ((1462 -1031) -((124 -80) + (969 -583))) ],v110[v317])};v314=1 + 1 ;end if (v314==2) then for v487=3 -2 ,v316 do v110[v317 + v487 ]=v318[v487];end v319=v318[1];v314=10 -7 ;end end end elseif (v113<=((374 + 122) -(262 + (449 -273)))) then if  not v110[v112[(2411 -(364 + 324)) -(345 + (3771 -2395)) ]] then v104=v104 + 1 ;else v104=v112[1 + 2 ];end elseif (v113>(141 -82)) then local v321=0 + 0 ;local v322;while true do if (v321==(0 -0)) then v322=v112[2 -0 ];v110[v322]=v110[v322](v21(v110,v322 + (2 -1) ,v105));break;end end elseif (v112[1270 -(1249 + 19) ]==v110[v112[4 + 0 + 0 ]]) then v104=v104 + (3 -2) ;else v104=v112[1089 -(686 + 400) ];end elseif (v113<=(52 + 14)) then if (v113<=63) then if (v113<=(290 -(73 + 156))) then v110[v112[1 + 1 ]]=v110[v112[3]][v112[815 -(721 + 90) ]];elseif (v113>(1 + 61)) then v110[v112[2]]=v42(v101[v112[9 -6 ]],nil,v61);else local v324=470 -(224 + 246) ;local v325;while true do if ((0 -0)==v324) then v325=v112[3 -1 ];v110[v325](v21(v110,v325 + 1 ,v105));break;end end end elseif (v113<=(12 + 52)) then v110[v112[1 + 1 ]]=v112[3 + 0 ];elseif (v113>(129 -64)) then v110[v112[(2575 -1801) -((714 -(203 + 310)) + (2564 -(1238 + 755))) ]]=v112[1 + 2 ];else v110[v112[1536 -(709 + 825) ]][v112[(2102 -961) -((168 -52) + (1886 -(196 + 668))) ]]=v110[v112[4]];end elseif (v113<=69) then if (v113<=(264 -197)) then local v196=0 -0 ;local v197;local v198;while true do if (v196==(834 -(171 + 662))) then while true do if (v197==0) then v198=v110[v112[97 -(4 + 89) ]];if  not v198 then v104=v104 + 1 ;else local v541=0 -0 ;local v542;while true do if (v541==0) then v542=0 + 0 ;while true do if (v542==(0 -0)) then v110[v112[2]]=v198;v104=v112[2 + 1 ];break;end end break;end end end break;end end break;end if (v196==(1486 -(35 + 1451))) then v197=1453 -(28 + 1425) ;v198=nil;v196=1994 -(941 + 1052) ;end end elseif (v113==(283 -(207 + 8))) then if  not v110[v112[1516 -(822 + 692) ]] then v104=v104 + (4 -(3 -0)) ;else v104=v112[(3 + 3) -(300 -(45 + 252)) ];end else local v330=0 + 0 ;local v331;while true do if (v330==0) then v331=v112[1 + 1 ];v110[v331]=v110[v331](v110[v331 + (2 -1) ]);break;end end end elseif (v113<=((1709 -(114 + 319)) -((998 -302) + 510))) then for v215=v112[2 -0 ],v112[5 -(2 + 0) ] do v110[v215]=nil;end elseif (v113==(105 -34)) then local v332=v112[3 -1 ];local v333={v110[v332](v110[v332 + (1207 -(741 + 465)) + 0 ])};local v334=465 -(170 + 295) ;for v402=v332,v112[4] do local v403=0;while true do if (v403==(0 + 0)) then v334=v334 + ((3 + 0) -(4 -2)) ;v110[v402]=v333[v334];break;end end end else local v335=0;local v336;local v337;local v338;local v339;while true do if (v335==(0 + 0)) then v336=0 + 0 ;v337=nil;v335=1 + 0 ;end if (v335==2) then while true do if (v336==(1231 -(957 + 273))) then v339=v112[1 + 2 ];for v574=1 + 0 ,v339 do v338[v574]=v110[v337 + v574 ];end break;end if (v336==0) then v337=v112[2];v338=v110[v337];v336=3 -2 ;end end break;end if ((2 -1)==v335) then v338=nil;v339=nil;v335=5 -3 ;end end end elseif (v113<=(415 -331)) then if (v113<=(13 + (1845 -(389 + 1391)))) then if (v113<=(48 + 27)) then if (v113<=(8 + 65)) then v110[v112[4 -2 ]]=v110[v112[954 -(783 + 168) ]] * v110[v112[13 -9 ]] ;elseif (v113>(73 + 1)) then local v340=311 -(309 + 2) ;local v341;local v342;local v343;while true do if (v340==0) then v341=v101[v112[9 -6 ]];v342=nil;v340=1213 -(1090 + 122) ;end if (2==v340) then for v493=1 + 0 ,v112[13 -9 ] do local v494=0;local v495;local v496;while true do if (v494==(1 + 0)) then while true do if (v495==(1118 -(628 + 490))) then local v601=0 + 0 ;while true do if ((2 -1)==v601) then v495=1;break;end if (v601==(0 -0)) then v104=v104 + (775 -(431 + 343)) ;v496=v100[v104];v601=1 -0 ;end end end if (v495==(2 -1)) then if (v496[1 + 0 ]==(3 + 16)) then v343[v493-1 ]={v110,v496[9 -(21 -(6 + 9)) ]};else v343[v493-1 ]={v60,v496[172 -(28 + 141) ]};end v109[ #v109 + (3 -(1 + 1)) ]=v343;break;end end break;end if (v494==(0 -0)) then v495=0;v496=nil;v494=1 + 0 ;end end end v110[v112[1319 -(486 + 831) ]]=v42(v341,v342,v61);break;end if (v340==(2 -1)) then v343={};v342=v18({},{[v7("\28\148\125\177\187\64\89","\217\67\203\20\223\223\37\33")]=function(v497,v498) local v499=0;local v500;local v501;while true do if ((3 -2)==v499) then while true do if (v500==0) then local v603=0 + 0 ;while true do if (v603==0) then v501=v343[v498];return v501[1][v501[6 -4 ]];end end end end break;end if ((1263 -(668 + 595))==v499) then v500=0 + 0 ;v501=nil;v499=1 + 0 ;end end end,[v7("\178\151\74\213\161\188\180\137\173\92","\218\237\200\36\176\214\213")]=function(v502,v503,v504) local v505=0;local v506;while true do if (v505==(0 -0)) then v506=v343[v503];v506[291 -(23 + 267) ][v506[1946 -(1129 + 815) ]]=v504;break;end end end});v340=2;end end else local v344=v112[376 -(123 + (638 -(371 + 16))) ];local v345,v346=v103(v110[v344](v110[v344 + 1 ]));v105=(v346 + v344) -(4 -3) ;local v347=1750 -(1326 + 424) ;for v404=v344,v105 do local v405=0;while true do if ((0 -0)==v405) then v347=v347 + (3 -2) ;v110[v404]=v345[v347];break;end end end end elseif (v113<=76) then local v200=118 -(88 + 30) ;local v201;local v202;local v203;local v204;local v205;while true do if (v200==0) then v201=771 -(720 + 51) ;v202=nil;v200=2 -1 ;end if (v200==2) then v205=nil;while true do if (v201==0) then local v509=1776 -(421 + 1355) ;while true do if (v509==(1 -0)) then v201=1 + 0 ;break;end if (v509==(1083 -(286 + 797))) then v202=v112[(2558 -1858) -(208 + 490) ];v203,v204=v103(v110[v202](v21(v110,v202 + 1 ,v112[4 -1 ])));v509=1;end end end if (v201==(440 -(397 + 42))) then local v510=0;while true do if (v510==(0 + 0)) then v105=(v204 + v202) -(801 -(24 + 776)) ;v205=0 -0 ;v510=786 -(222 + 563) ;end if (v510==(1 -0)) then v201=2 + 0 ;break;end end end if (v201==(192 -(23 + 167))) then for v513=v202,v105 do local v514=1798 -(690 + 1108) ;while true do if (v514==0) then v205=v205 + 1 + 0 ;v110[v513]=v203[v205];break;end end end break;end end break;end if (v200==(1 + 0)) then v203=nil;v204=nil;v200=850 -(40 + 808) ;end end elseif (v113==(13 + 64)) then local v348=0;local v349;local v350;local v351;local v352;while true do if (v348==0) then v349=0 -0 ;v350=nil;v348=1;end if (v348==(1 + 0)) then v351=nil;v352=nil;v348=2 + 0 ;end if (v348==(2 + 0)) then while true do if (v349==(572 -(47 + 524))) then v352=v110[v350 + 2 ];if (v352>0) then if (v351>v110[v350 + 1 + 0 ]) then v104=v112[8 -5 ];else v110[v350 + (4 -1) ]=v351;end elseif (v351<v110[v350 + (2 -1) + (1726 -(1165 + 561)) ]) then v104=v112[1 + 2 ];else v110[v350 + 3 ]=v351;end break;end if (v349==0) then v350=v112[6 -4 ];v351=v110[v350];v349=1;end end break;end end else v104=v112[2 + 1 ];end elseif (v113<=(560 -(341 + 138))) then if (v113<=(22 + 57)) then do return;end elseif (v113==(165 -85)) then local v354=326 -(89 + 237) ;local v355;local v356;local v357;while true do if (v354==(0 -0)) then v355=v112[3 -1 ];v356=v110[v355 + (883 -(581 + 300)) ];v354=1221 -(855 + 365) ;end if (v354==2) then if (v356>(0 -0)) then if (v357<=v110[v355 + 1 + 0 ]) then local v580=0;local v581;while true do if (v580==(1235 -(1030 + 205))) then v581=0;while true do if (v581==0) then v104=v112[3];v110[v355 + 3 + 0 ]=v357;break;end end break;end end end elseif (v357>=v110[v355 + 1 ]) then v104=v112[3];v110[v355 + 3 + 0 ]=v357;end break;end if (v354==1) then v357=v110[v355] + v356 ;v110[v355]=v357;v354=2;end end else local v358=0;local v359;local v360;while true do if (v358==0) then v359=0;v360=nil;v358=287 -(156 + 130) ;end if (v358==1) then while true do if (v359==0) then v360=v112[2];do return v21(v110,v360,v105);end break;end end break;end end end elseif (v113<=82) then local v206=0 -0 ;local v207;local v208;local v209;while true do if (v206==(1 -0)) then v209=v110[v207 + (3 -1) ];if (v209>(0 + 0)) then if (v208>v110[v207 + 1 + 0 ]) then v104=v112[72 -(10 + 59) ];else v110[v207 + 1 + 2 ]=v208;end elseif (v208<v110[v207 + 1 ]) then v104=v112[14 -11 ];else v110[v207 + (10 -(1170 -(671 + 492))) ]=v208;end break;end if (v206==(0 + 0)) then v207=v112[1217 -(369 + 846) ];v208=v110[v207];v206=1;end end elseif (v113>(22 + 61)) then local v361=0 + 0 ;local v362;local v363;while true do if (v361==(1946 -(1036 + 909))) then while true do if (v362==0) then v363=v112[2 + 0 ];v110[v363]=v110[v363](v21(v110,v363 + (1 -0) ,v105));break;end end break;end if (v361==0) then v362=203 -(11 + 192) ;v363=nil;v361=1 + 0 ;end end else local v364=175 -(135 + 40) ;local v365;while true do if (v364==0) then v365=v112[4 -2 ];v110[v365]=v110[v365](v110[v365 + 1 + 0 ]);break;end end end elseif (v113<=(198 -108)) then if (v113<=(129 -42)) then if (v113<=(261 -(50 + 126))) then v110[v112[2]]=v110[v112[3]]%v112[(2402 -1539) -(181 + 633 + (1458 -(1233 + 180))) ] ;elseif (v113==(1055 -(522 + 447))) then v110[v112[1423 -(107 + 1314) ]]={};else v110[v112[2]]=v42(v101[v112[7 -(2 + 2) ]],nil,v61);end elseif (v113<=(267 -179)) then v110[v112[1 + 1 ]]=v110[v112[(3 -1) + (3 -2) ]] + v112[1914 -(716 + 1194) ] ;elseif (v113==(925 -(660 + 176))) then local v368=0 + 0 ;local v369;while true do if (v368==(0 + 0)) then v369=v112[505 -(74 + 429) ];v110[v369]=v110[v369](v21(v110,v369 + 1 ,v112[5 -2 ]));break;end end else v110[v112[1 + 1 + 0 ]]=v110[v112[(2 -1) + 2 + 0 ]][v112[12 -8 ]];end elseif (v113<=(229 -136)) then if (v113<=(524 -(279 + 154))) then local v212=0;local v213;while true do if (v212==0) then v213=v112[780 -(454 + 324) ];v110[v213]=v110[v213]();break;end end elseif (v113>92) then v110[v112[2]]=v110[v112[3]]%v110[v112[4 + 0 ]] ;else local v373=17 -(12 + 5) ;local v374;local v375;while true do if (v373==(0 + 0)) then local v454=0 -0 ;while true do if (v454==(0 + 0)) then v374=v112[1096 -(277 + 816) ];v375=v110[v374];v454=4 -3 ;end if (v454==(1184 -(1058 + 125))) then v373=1 + 0 ;break;end end end if (v373==(976 -(815 + 160))) then for v511=v374 + 1 ,v112[4] do v375=v375   .. v110[v511] ;end v110[v112[8 -6 ]]=v375;break;end end end elseif (v113<=(225 -130)) then if (v113==94) then v110[v112[(49 + 155) -((40 -26) + (2086 -(41 + 1857))) ]]=v110[v112[1896 -(1222 + 671) ]][v110[v112[10 -6 ]]];else v104=v112[678 -((767 -233) + (1323 -(229 + 953))) ];end elseif (v113>(1870 -(1111 + 663))) then local v379=1579 -(874 + 705) ;local v380;local v381;local v382;while true do if (v379==1) then v382=nil;while true do if (v380==1) then for v584=v381 + 1 + 0 ,v112[3 + 1 ] do v382=v382   .. v110[v584] ;end v110[v112[3 -1 ]]=v382;break;end if (v380==(0 + 0)) then v381=v112[3];v382=v110[v381];v380=1;end end break;end if (v379==0) then v380=679 -(642 + 37) ;v381=nil;v379=1 + 0 ;end end else do return v110[v112[1 + 1 ]]();end end v104=v104 + (2 -1) ;break;end if (v134==(454 -(233 + 221))) then v112=v100[v104];v113=v112[2 -1 ];v134=1 + 0 ;end end end break;end end end;end if (v62==0) then v63=v59[1542 -(718 + 823) ];v64=v59[2];v62=1;end end end return v42(v41(),{},v29)(...);end if ((2 + 1)==v30) then function v37() local v66=805 -(266 + 539) ;local v67;local v68;local v69;local v70;local v71;local v72;local v73;while true do if (v66==1) then v69=nil;v70=nil;v66=2;end if (v66==(5 -3)) then v71=nil;v72=nil;v66=1228 -(636 + 589) ;end if ((0 -0)==v66) then v67=0;v68=nil;v66=1 -0 ;end if (v66==3) then v73=nil;while true do if (v67==0) then local v123=0 + 0 ;while true do if (v123==(1 + 0)) then v67=1;break;end if (v123==(1015 -(657 + 358))) then v68=v36();v69=v36();v123=2 -1 ;end end end if (v67==2) then local v124=0 -0 ;while true do if (v124==(1188 -(1151 + 36))) then v67=3 + 0 ;break;end if ((0 + 0)==v124) then v72=v33(v69,21,92 -61 );v73=((v33(v69,1864 -(1552 + 280) )==(835 -(64 + 770))) and  -(1 + 0)) or (1081 -((2315 -1295) + 60)) ;v124=1 + 0 ;end end end if ((1246 -(157 + 1086))==v67) then local v125=0 -0 ;while true do if (v125==(0 -0)) then if (v72==0) then if (v71==(0 -0)) then return v73 * (0 -0) ;else local v149=819 -(599 + 220) ;local v150;while true do if (v149==(0 -0)) then v150=1931 -(1813 + 118) ;while true do if (v150==(0 + 0)) then v72=(2641 -(841 + 376)) -((882 -252) + 793) ;v70=0 + 0 ;break;end end break;end end end elseif (v72==2047) then return ((v71==(0 -0)) and (v73 * ((860 -(464 + 395))/(0 -0)))) or (v73 * NaN) ;end return v16(v73,v72-(492 + 531) ) * (v70 + (v71/((839 -(467 + 370))^(175 -(253 -130))))) ;end end end if (v67==1) then local v126=0 + 0 ;while true do if (1==v126) then v67=2;break;end if ((0 -0)==v126) then v70=(1 + 0) -(0 -0) ;v71=(v33(v69,521 -(150 + 370) ,(1333 -(74 + 1208)) -(75 -44) ) * ((9 -7)^(23 + 9))) + v68 ;v126=1;end end end end break;end end end v38=nil;function v38(v74) local v75=390 -(14 + 376) ;local v76;local v77;while true do if (v75==(0 -0)) then v76=nil;if  not v74 then local v118=0;local v119;while true do if (v118==(0 + 0)) then v119=0 + 0 ;while true do if ((0 + 0)==v119) then v74=v36();if (v74==(0 -0)) then return "";end break;end end break;end end end v75=1 + 0 ;end if (v75==(81 -(23 + 55))) then return v14(v77);end if (v75==2) then v77={};for v114=(1469 -849) -(555 + 43 + 21) , #v76 do v77[v114]=v10(v9(v11(v76,v114,v114)));end v75=3 + 0 ;end if (v75==(1 -0)) then v76=v11(v28,v31,(v31 + v74) -1 );v31=v31 + v74 ;v75=2;end end end v39=v36;v30=2 + 2 ;end if (v30==(903 -(652 + 249))) then function v35() local v78=0 -0 ;local v79;local v80;local v81;while true do if (v78==1) then v81=nil;while true do if (0==v79) then local v127=1868 -(708 + 1160) ;while true do if (v127==(0 -0)) then v80,v81=v9(v28,v31,v31 + (3 -1) );v31=v31 + (29 -(10 + 17)) ;v127=1;end if (v127==(1 + 0)) then v79=1;break;end end end if ((1733 -(1400 + 332))==v79) then return (v81 * (490 -234)) + v80 ;end end break;end if (v78==(1908 -(242 + 1666))) then v79=0;v80=nil;v78=1;end end end v36=nil;function v36() local v82=0 + 0 ;local v83;local v84;local v85;local v86;while true do if (v82==0) then v83,v84,v85,v86=v9(v28,v31,v31 + 2 + 1 );v31=v31 + 4 + 0 ;v82=1;end if ((941 -(850 + 90))==v82) then return (v86 * (29384838 -12607622)) + (v85 * ((67811 -(360 + 1030)) -(231 + 30 + 624))) + (v84 * (454 -(558 -360))) + v83 ;end end end v37=nil;v30=3;end end end return vv17(),...);